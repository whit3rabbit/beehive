name: beehive-test-env
services:
  cert-generator:
    image: alpine/openssl:latest
    container_name: beehive-cert-generator
    volumes:
      - ./certs:/certs
    entrypoint: ["/bin/sh"]
    command: |
      -c '
      mkdir -p /certs &&
      cd /certs &&
      openssl genrsa -out ca.key 2048 &&
      openssl req -x509 -new -nodes -key ca.key -subj "/CN=MongoCA" -days 3650 -out ca.crt &&
      openssl genrsa -out mongodb.key 2048 &&
      openssl req -new -key mongodb.key -subj "/CN=localhost" -out mongodb.csr &&
      openssl x509 -req -in mongodb.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out mongodb.crt -days 365 &&
      cat mongodb.crt mongodb.key > mongodb.pem &&
      chmod 644 ca.crt &&
      chmod 600 ca.key &&
      chmod 644 mongodb.crt &&
      chmod 600 mongodb.key &&
      chmod 600 mongodb.pem &&
      chown -R 999:999 /certs/* &&
      echo "TLS certificates generated successfully" &&
      ls -l
      '

  mongodb:
    image: mongo:latest
    container_name: beehive-mongodb-test
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE}
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    ports:
      - "${MONGODB_PORT:-27017}:27017"
    volumes:
      - type: bind
        source: ./mongo-init.js
        target: /docker-entrypoint-initdb.d/mongo-init.js
        read_only: true
      - mongodb_data:/data/db
      - ./certs:/certs
    user: mongodb
    command: mongod --auth --tlsMode requireTLS --tlsCertificateKeyFile /certs/mongodb.pem --tlsCAFile /certs/ca.crt
    depends_on:
      cert-generator:
        condition: service_completed_successfully
    networks:
      - beehive-network

networks:
  beehive-network:
    driver: bridge

volumes:
  mongodb_data: